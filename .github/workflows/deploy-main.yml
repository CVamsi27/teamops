name: Build, Test & Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "20"
  PNPM_VERSION: "10"

jobs:
  # Always run tests and build
  test-and-build:
    name: Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linter
        run: pnpm lint

      - name: Build applications
        run: pnpm build

      - name: Run security audit
        run: pnpm audit --audit-level moderate || echo "Audit completed with warnings"

  # Deployment notice (Render auto-deploys via render.yaml)
  deployment-status:
    name: Deployment Status
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Deployment Information
        run: |
          echo "‚úÖ Build and tests passed!"
          echo ""
          echo "üöÄ **Deployment Options:**"
          echo ""
          echo "**üîÑ Automatic (Recommended):**"
          echo "   - Render auto-deploys from this commit via render.yaml"
          echo "   - Monitor at: https://dashboard.render.com"
          echo ""
          echo "**‚ö° Manual Deployment:**"
          echo "   - Render: Push to main branch (automatic)"
          echo "   - Vercel: npm run deploy:vercel"
          echo "   - Railway: npm run deploy:railway"
          echo ""
          echo "**üåê Health Check URLs:**"
          echo "   - API: https://teamops-api.buildora.work/api/health"
          echo "   - Web: https://teamops.buildora.work"
          echo ""
          echo "**ÔøΩ CI/CD Workflows Available:**"
          echo "   - deploy-render.yml (Render + API triggers)"
          echo "   - deploy-vercel-railway.yml (Split deployment)"
          echo ""
          echo "üìñ See docs/DEPLOYMENT_STEPS.md for detailed instructions"
